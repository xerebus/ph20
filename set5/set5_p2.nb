(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    196808,       3889]
NotebookOptionsPosition[    194227,       3804]
NotebookOutlinePosition[    194562,       3819]
CellTagsIndexPosition[    194519,       3816]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Set 5, Part 2: Symbolic Algebra with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subtitle",
 CellChangeTimes->{{3.609094308851027*^9, 3.60909433316866*^9}, {
  3.6090970104493427`*^9, 3.609097011805149*^9}}],

Cell[TextData[{
 StyleBox["sin(", "Subsubtitle"],
 StyleBox["x", "Subsubtitle",
  FontSlant->"Italic"],
 StyleBox[") and cos(", "Subsubtitle"],
 StyleBox["x", "Subsubtitle",
  FontSlant->"Italic"],
 StyleBox[") in series form", "Subsubtitle"]
}], "Subtitle",
 CellChangeTimes->{{3.609096962093175*^9, 3.609097001977642*^9}}],

Cell[TextData[{
 "We want to compare the series expansions of sin(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") and cos(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") to the actual functions. We define series versions of sin(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") and cos(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") about ",
 StyleBox["x",
  FontSlant->"Italic"],
 " = 0."
}], "Text",
 CellChangeTimes->{{3.609094380059757*^9, 3.609094453840735*^9}, {
  3.609094640093254*^9, 3.6090946403589487`*^9}, {3.609095184044463*^9, 
  3.6090952491431427`*^9}, {3.609095509353215*^9, 3.6090955096208973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SerSin", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "y", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"y", "\[Rule]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6090955487137623`*^9, 3.60909559212473*^9}, {
  3.6090956282137947`*^9, 3.609095675400125*^9}, {3.609095738071546*^9, 
  3.609095826216612*^9}, {3.60909586215809*^9, 3.609095866356462*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SerCos", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Cos", "[", "y", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"y", "\[Rule]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6090959085079308`*^9, 3.609095912994109*^9}}],

Cell[TextData[{
 "We compare the series and normal versions of sin(",
 StyleBox["x",
  FontSlant->"Italic"],
 "), plotting the error as a function of ",
 StyleBox["x",
  FontSlant->"Italic"],
 " for various ",
 StyleBox["n.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.609095941948391*^9, 3.6090959681824837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SinError", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Abs", "[", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"SerSin", "[", 
      RowBox[{"x", ",", "n"}], "]"}], "-", 
     RowBox[{"Sin", "[", "x", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.609096105421606*^9, 3.609096135506713*^9}, {
  3.609096280059774*^9, 3.6090962827239447`*^9}, {3.609096434850004*^9, 
  3.60909643885982*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SinError", "[", 
      RowBox[{"x", ",", "3"}], "]"}], ",", 
     RowBox[{"SinError", "[", 
      RowBox[{"x", ",", "7"}], "]"}], ",", 
     RowBox[{"SinError", "[", 
      RowBox[{"x", ",", "13"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=3\>\"", ",", "\"\<n=7\>\"", ",", "\"\<n=13\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6090959714887037`*^9, 3.6090960570423393`*^9}, {
  3.609096152030839*^9, 3.609096194121355*^9}, {3.6090962315445147`*^9, 
  3.60909625796694*^9}, {3.6090966093248777`*^9, 3.609096646894244*^9}, {
  3.609096802042589*^9, 3.6090968153109417`*^9}}],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
FWhVwP8DF7EFuQ==
        "]]}, {
       Hue[0.1421359549995791, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
/VeIRfnj7rjX58Sn4f8Aej5LDg==
        "]]}}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, PlotRange -> 
     NCache[{{0, Pi}, {0., 0.16685506226738134`}}, {{0, 3.141592653589793}, {
        0., 0.16685506226738134`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}],
    TemplateBox[{"\"n=3\"", "\"n=7\"", "\"n=13\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
       Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.60909605772631*^9, 3.60909619519405*^9, {3.609096258944434*^9, 
   3.609096285528831*^9}, {3.6090966104189577`*^9, 3.609096647737821*^9}, {
   3.609096800088236*^9, 3.609096815919877*^9}, 3.609699467286792*^9}]
}, Open  ]],

Cell[TextData[{
 "As we go substantially far away from the point of expansion (",
 StyleBox["x",
  FontSlant->"Italic"],
 " = 0), the higher-order approximations are substantially less accurate."
}], "Text",
 CellChangeTimes->{{3.609096835646722*^9, 3.609096857960924*^9}, {
  3.609096891250716*^9, 3.609096906897399*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SinError", "[", 
      RowBox[{"x", ",", "3"}], "]"}], ",", 
     RowBox[{"SinError", "[", 
      RowBox[{"x", ",", "7"}], "]"}], ",", 
     RowBox[{"SinError", "[", 
      RowBox[{"x", ",", "13"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=3\>\"", ",", "\"\<n=7\>\"", ",", "\"\<n=13\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609096916805969*^9, 3.6090969192535048`*^9}}],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
/ndYHLmzaa69Giah/wP33p1R
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
fq/Rm7BlwVwl6SQJ31V4haco4uD/ADKp6e4=
        "]]}, {
       Hue[0.1421359549995791, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
        "]]}}, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> 
     True, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, 
     PlotRange -> 
     NCache[{{0, 4 Pi}, {0., 1024.72569690947}}, {{0, 12.566370614359172`}, {
        0., 1024.72569690947}}], PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}],
    TemplateBox[{"\"n=3\"", "\"n=7\"", "\"n=13\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
       Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.609096920509753*^9, 3.6096994714159527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Squaring", "Subsubtitle",
 CellChangeTimes->{{3.609097103342087*^9, 3.609097122130638*^9}}],

Cell[TextData[{
 "We check whether ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["sin", "2"], "(", "x", ")"}], "+", 
     RowBox[{
      SuperscriptBox["cos", "2"], "(", "x", ")"}]}], "=", "1"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " holds for the series versions."
}], "Text",
 CellChangeTimes->{{3.609097130667935*^9, 3.6090971609823713`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Squared1", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"SerSin", "[", 
      RowBox[{"x", ",", "n"}], "]"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"SerCos", "[", 
      RowBox[{"x", ",", "n"}], "]"}], ")"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.6090971633600492`*^9, 3.6090972011124077`*^9}, {
  3.60909723398026*^9, 3.609097330676712*^9}, {3.6097006354388723`*^9, 
  3.6097006372903957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Squared1", "[", 
      RowBox[{"x", ",", "3"}], "]"}], ",", 
     RowBox[{"Squared1", "[", 
      RowBox[{"x", ",", "7"}], "]"}], ",", 
     RowBox[{"Squared1", "[", 
      RowBox[{"x", ",", "13"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=3\>\"", ",", "\"\<n=7\>\"", ",", "\"\<n=13\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609699500134118*^9, 3.609699551507722*^9}}],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
x14uot/sV8/fikn8DwMeRvM=
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Hue[0.1421359549995791, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
D/YUHbM=
        "]]}}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.88}, Method -> {}, 
     PlotRange -> 
     NCache[{{0, Pi}, {0.8888889665263905, 1.3632430015637114`}}, {{
        0, 3.141592653589793}, {0.8888889665263905, 1.3632430015637114`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}],
    TemplateBox[{"\"n=3\"", "\"n=7\"", "\"n=13\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
       Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.609699552557398*^9, 3.609700641365263*^9}]
}, Open  ]],

Cell[TextData[{
 "As expected, when ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is close to 0 (the point of series expansion), a higher ",
 StyleBox["n",
  FontSlant->"Italic"],
 " yields a more accurate result."
}], "Text",
 CellChangeTimes->{{3.6096995925789948`*^9, 3.6096996318482113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Squared1", "[", 
      RowBox[{"x", ",", "3"}], "]"}], ",", 
     RowBox[{"Squared1", "[", 
      RowBox[{"x", ",", "7"}], "]"}], ",", 
     RowBox[{"Squared1", "[", 
      RowBox[{"x", ",", "13"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=3\>\"", ",", "\"\<n=7\>\"", ",", "\"\<n=13\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.609699638802318*^9, {3.60970056792247*^9, 3.60970059159299*^9}}],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJwd13k8lF8XAHD7TvZsyVLZokii1DlJqKSkqFASKdmXkLUIUbYQSZZsKSRb
kUgISSpLyI9sSWPGPoztfXrnj5nP9zMzz3PvPeeeex5pa+dTtgx0dHSsxNu/
T8Yajrbh3bEH6P7/mgLayx02PXGBsDWme319nQKjglcXy+OiQXmjz+o/3xNt
4i6segCLrzuW/jlH3iKNrvAhkO13z/5z7Z6pnSbpKXD95/Hxf+7VC6nLjkuD
Iozv/meaIpeiX10GtFvq1PxzmFqXW3bVUxB5cib1nwX3ple1lWZDpGy08z9n
HLRnWizIhd5+913/rHJE/bh07jNIzzQcWyNcdXIt4Wj6c/ihv+3OPxucbfrP
PbkAamu/cv1z58U4udS4IpjTHiEmQIHiXSqaww0vof9IRdMKYa89D3561RWD
x8LV+WXCB/YtBnHVvAKTpb5lGmEmsNyaUVUCDD0V3UuEW3Tqmne/LoUK4Wsh
i4Rj9eScWkrLAM2lVxcInz16j/9icTkczunWnicsaTRdPltQAdOBBgdmCY8Y
m5qH57+Gxu0Ly1OEn5+pWpfIfQMdw/IuZMJu56Syip9WggYrJf4vYU3LOwZ6
6VVAvrDJZpzwmtUEqffxW6CcOdE9QrjB5kSsc3I1pGj9/j34Lz5XS3czJb4D
J1+e6J+ETzmI9ibF1QD/fFlDN2EuTahJ1K+FIpXEkG+Ep9648v1qqIXk3B31
rYS/78u6rKT7HjSkP/k1Ei6v7irzrHsPhiSfnBrCycDOVot1cF9TWOs1Yb/3
+85z1NSB95VD218SPtSQvvak6gMk/fjM94TwNv3vJ/9o1cPwN+uZB4Q5mpmf
7npdD0NtixvuEp48qjnvr9EA3fu3XfIn3N5qr99U2gBe/YY/XQiXGKUm8+9q
hDHRR16XCSe2f/lrUdwI4m6sCmcIW3aox0wXfIRsLbns3YTR1G5o3/YmWH7e
en4L4S0/ktVD85tgSMRnhY/wRN/aD7HcZlB8k939Z40Cny1VlWy3tsChMxG0
74RfDlz2L3raArF58PMtYa/hJmnd9E/wiPvbiwjC522X3aMkW8E/40GwM+ED
v5UbfzxuhSQyZfwUYaa/cfaOyZ8hi0tXWYjwb4eGtxUb22Dr6Zczs6tE/pCp
PAyJbSB9KkPgK+HYGYuSxLgvMNEhsCuU8H2hR9q13O3gHnw74zzhb8V3Nu8+
1Q6ZDJK/thM2n7AYlexrh+/fftxrWaFAeqhB04PNX8HPdqIjgfCIjPpzNpuv
kCqxIecCYSdzTtcZ0lcQOSeVPL5MrCd1wcRO9Rvk/T6Z8Izw4oMhjZ+e3+B+
iuQXO8K3Wt+sNKx9A2GfyYI+GgXi918NT+btgM0D1uQnSxTo6TG5znOmA3jC
/xbqE5a8AUbByR2QZc7JPblIgdxCYUFHmU6Qe91qpEyYdJSB+utKJ5y7d5Wt
iUqBnb8ne0yfd8JG+zjOi4QrNzekoXoXnA4cS7q1QOR31cvbZd5dIJY1TOUi
fOjsY1vF6i7QFdh4NH6eAq0x7kqCet3wsMTCJXGOAgP0MhW/zX4AekaYXZkh
4v2E+5HF4x/QknRspG2aAlf3Lvl9HfwBL+P+K1YjPOPWrlN1rQciON1L/1KI
eI0EtEX59hLxoHZKTVLgSJB9MWNtL/CZRI5bkSgQJWEa783UB0YWEiEpfymw
8Yzyeev7fZDDo7+0/ocCio19o7vTfoKKStSJ4DEKOFt/bMof/glTtSqSCaMU
KF179XyzfD8UnDGtSh+hwP49Ea7sxf1QP9HPmD1EgZN5mqs/6/6Drz+MD178
jwIJulsGjVkHIPxgIVW7n6ifgxs+NB4bABuvO3UCPylwWfR3+MuOAXj000Xr
RQ8F9jUc5dBxH4Rs1hbF0A4K8HbkfNnzYBD+9FUaH/xO5MMQQ4JyySCcLfb6
Nv+VmA9d1WbR2UGIeB2TdPQLBYb2Ke2ecvsF0bNqkNFMgYqjYbTRuF+g3vB7
39Ymop6cG67pe/ULhH8EMmY2UmC3V8rRjzO/IHRasPDOBwqEv+K0euI2BAPS
aQ9m3xL78b3d1vi4IUgtucSuXUUBtfYPE3dfDQHDPc0Pfm8o8HPS19NzZghm
9lfXjZVRYIcCKcLQbRi+brijaV5Iga601jKa6wjED2kNvU4l6mOhvO9U7AjU
M/B4BqRQIKg6BMeKR2BRidV6XzIFFPq0P32dHgHuR8oiKfFEPRIuGMxzHYXW
iX3ZUxEUkL1/n9PMdQys2O3fTngS+Z7yp90wdgwumcnkS7kT+ZR/OFGneAyK
a+QNj7tQ4EbTqpTK9BjcCLoZHWFP7FdGJw1m19/wdl7uXPwFCrjcNLpU4jIO
BrbO/oO6FDjqpJ3HFjMOjWNPJGIOEvezVqRYFo2DuIZVuMYBYj5HWPzZyOMg
9ibtg90eIv6i75Isr/8BNTHBTnMFoh6+Vm5nvTIBJWyO5+5xUiB7ngsszEkQ
EH10795mMgT8od0pvkkCv4efmFvryXC2f7yV5REJ9vfcizpTSwauhvrzxT9I
UGJ5RvJkBRnc4v1usJhOQnR76rHRLDLgLlLBy5NkuBwoPJgZQAbH17ZRDLJT
cL33XIySMpk4T42l6NWn4HtdTbabHBmmerRfretOgQj/tXOl0mTwWBboWrky
BUmkb77ywmS4eaBuEzV/CvZqK4v1rk1CaL1kwV+1aaj3LXr56MskpLd3f+rQ
mQHjeQOeJy6TYH3pg+V3kxk4V58dU2s/CbIzhZSvNjOQINoX+NtmEnIEQgW+
hM6Azdj2Y7rnJqHAVN28uWUGMmc/hB7WmYTKnzET1admoYrqqtwqNAl+jn5+
by/Pgig7tdmedxL2r9nxVHnMwoXEK7pCnJNQuxnUXifOQmWIzmw03SR8tJ70
edU7C7Qkx/tKJBJ0jB9hz7WegzSZoP3+jSSgJMsfDnabAzORogG7OhJwHGO9
dfH2HLS1RXPaviMBFtQvbsycgxcNZxSTy0nw3BXGw3/Nweb2Es7FXBI0ykhu
sZ2eA/FJRa/QLBIMfl+5eJB+HpSeypGVMkggrFHZvSQ1D3ITXy69I+J2m6b+
0d5qHlIkTf35o0mQ+lyAUd9lHvTT35+xv0eC1xYzB2SD5uHQrOPO/+6SYPJd
UXlf2jz8dluKlLhDAjaXqJmKonnwt3S4NH6bBDLSjirxNfOwk81o6FsQCc4G
K+YYDsyDkJtiNos/CdzV2YfkKfMQHBp2zNiXBFGjvzcxr8/D3UjJK9U+JHiW
2HjuF88CRBoovTjmTYJ6/eyEaskFGM+f7Vq5QYKBxeCvySoLoM/3KeOrJwlo
z6y5bxxYAPVkoZYWDxIImh88cspoAVSdj234406CHVxSd1QuLICo9IqaMuGj
1Wu1HE4LMDTzdfGhGwlsnPpXxvwXoHl3wjZFwoGb32p+uL8ArRk7QkZcSfCo
/ZFHWuoCxBcX9X0kXHbL56VvwQK8pTNc6iDcrnaWZFa9AFdeXHnORfz/77CG
vPrnBdhfHlPnTJglQciGt5+437X7fOuEpfXm0kikBcisP+NYRYxHm/qtr2ll
AaIHxAuyifGb5hVvzOaiAruFUf47Yn6u52JMbklQIfZbCrJ6keAeh3O05XYq
MOkuHA8i1ien6vgnLW0q6N1PfKVI7Mv3DttZhQ2psK1//SSrHwl+buI8NGNO
Jfo7Rp6NASSgtv0JaLtOBcPKuvbzRHz4g5oq832pQB9advs7ET9l1dyF0Egq
1H3N33CbiK/B0B21yylU6M78bGsXToLLD2yc4DkVlPXyPEMiibqgeyhfvIoK
v7rk1HqjiH2fQyfT0UuM3+Fz+K5EErSZDVi+nKDC7og+QS0i38bZ3iXfo1Fh
YcxW1fcJCSSv+/IdFluEw8N5Ym+I/NWSOH9cWnERDJFMKn9BgtOfNe+uai1C
ZFj7+fliEkTsWKArP7cIwrFcOzWrSXDT64jSmP0iVJ7Pmqr7QIJrNY/PCPst
QpOb7OMnLcT4TxzKv/FkEei+7VIz6iGB5sPEjpyiRZDPHxrZ8osE8gN/1rpq
F6Gd9I7/1B8SsDrHmOwZXgSJgwxJZTQSLJQP+9vNLUKjdGwHmXESxtY08h4y
L0GnbJ5pCPckNEb1r1DllkDdyEeyRXoSQgoVc147LEG4Rbj6X6NJoo/3bx/3
X4K3Y+bLO80n4fKBrzSR6CXI59t3csBuEnTavE74FC9BYIgDn9/tSaAn1y9q
LSyB/5fjn4bfTsLUbhFZe1YalA+LvE9pnYRB/+vHH4nQgL7kcWjzT6K+cPNn
0vbSgDop6nSfqH8ByhePVQXS4IHdY/5xfTI4eb7y/BtDA8XOO58DzclgWc2c
Lp5JgzXx4CcpzmTQPv5izreeBumHO+avJJNh2WEpVZt9GSL3hMXcmiXDRKlh
k4PYMgyqbJl3Is6D3pW0mcdKyxDAlN5IkSX6pXt6+qvHlyFRlb+oxJQC3i8e
TFXHLUPjHa+7/sR5fHVuTIz8dBlIfcUKMEgBM+29hyXLlsHyHHN+FtE/arQO
Jgd0L4PHvs5J1U1TMPdX+RBIrBB9I9c61XIKXJWaEmqzV0CP56RFytQUjNiO
BKWXr8BB/cZdOkzTYJpO5xD0cQVEbZ/dPyIyDXuFtHTwzwoo65ZcDTg4DQzr
z8g121fh882utIykafDQauxJ278KQcPOFxyLpmHMfag+0GgVZPkkNj1tnIaW
cbEUcFkFPiX5MOOFaYj7FqlfU7IKK4IVPP3nZ4CJO08trX4VBF2zqsU9Z+CG
fv2mwM5VKD706k5b9Aycf7sye4C6CuMZW1MTGmdAJscx/d3eNWD7/Fr8i9Ys
vPI5sVT9fg0ERnJtpDXnYEvp9ZHUb2twhXkvve75OUgkh33xH14DC/br36f8
5uDm5drs/czr0LC1boX8YQ50jqueqjZYh/cqFlq5Z+fhu5TA87df1sFxMl3h
4pMF0DPfkfh4cB3e6bA97GtegNcJx275Ta+DrkId9/L8Ahgx1yk9YafDsNW1
IoWTVFC7SaO/oESHi1pryR5ci0C7fL2w34kOvTltLh7MWQIrvlnvtzfosFOl
ATl7lqDh3c1DKQF0qKbQx+zLRYMY0YgfZ6PokE5pUPWUJw3kvuQxdBTQodGD
6jPsJ5bh9N4x0xYSHYbsNeuZk12Fyt+O0s/m6FDQqbun49IqbE6Y/xu2Qode
JKNi9/RVmKAw3TrMRY+GOse95zavwa1s2ee1SvRo0+BG2ym/DoW8l9bL7elx
kr/g+t0i4jrvxpsT3OjRYkH7amcHHfpcd4n3uEmPqQZJkVE0OtRtDFRQi6DH
SMlLw8f06bHP94lJwTN6TFo0uM41Ro9sv/tyn47TI1myZcZTixGtq01Pxlxh
QMctI7FvD7CgWrkIv6gzAwptqPhE782CDEW93zO8GPCht1MMqZgFM9MvmJWE
M6BmA/OB13KsOBR85UJXPgN+qhjQOCHOhtZHbzhIUBjQYr10plKWA9UOaapk
Uxlws3xcKsNVDmTQplGU6Rgx3NG+i6WAAzOVA9yBjxHPruquHdXixCHe0JvW
uxgxwGuGSjrPhdbdCeF5XoxYENXqPv+BB9XazY6qBjHi131vOWoFNyBDsyhX
ZTgj5t71t7G6sgEzK1OjPyUzoqTOlwBBFl4cSs1OJFcx4uVdDUeZinnR2qYs
S52OCcfH21tBgh8vT3fU1oYzocnpcNIFIyG0uhlj9jqGCT+EzVRuui2EFoyG
5KIkJhx86lJ8qlwITYU+iKflMaFf4iF9GSlhNNAqvuHfxIQzi/SZTkvCqHLr
/va9bMz491FOpfsHEVTkOPJBlZcZV96+/7ywJoJyD5jOK4gw4z3pMljdK4pS
2b5hIvLMuCP+TvHDUlEUaL42tKDPjNIFNVLihWK4yKuXVBLGjEn3FFGmSgLn
kul3PI9mRp3m5TLddQmclqluyHzIjAFnT7csHtqEE+rqs7G5zFjouxIs+mUT
9p+VMXL5yIzBjkuOZiRJrEtfY1RmZcGt+3PkP2dI4b2dFc45oSwo3eF2g1dD
FlvUusc8o1hwuDOT5/glWWTbTbU8nMiC7315x/67J4shWnsMR7JZMEsy2pRp
VBZ9dSrkZRpYsMzez9smeQvan674lcrIinL9ZLtJ/m2o711hkhDEikY/SXT9
hgoYcrO7xSacFWt3mrE3BitgnR/1oHoMK675Kd4RqlLAA7f27PyexorcIcVb
JhQVUSOigouvhhVvckXr3tyghFseVzTcW2XFAzGTvJWk7chQW7En5CYbvnuY
bLTivxPzuflzVm+zoVu0+pDF0514ytxB0CuSDb0E9pkyN+/EpwtS09ces+Ho
5ozIHUKqqKsckX/iHRsKbRxcmnupiqGPLDaJM7CjWlNR59MFNeTwpGd8dZcd
nWpYY59V78ZXdeauSnHs2CmfdOQ/0m48z1s+kPWIHZ1fPN92TUIDnz+3f/vw
OTsGvKLbE+yngYZD3z39P7Pj5/o0+S7cg1EncsYN+Dhwd9vWMpteTeRTPNY2
kMSBjXO2h/NPa+MYaxpfUzoHtu+UW8mK1MbK0ZnTL/M4kPdTz+fFOm20yXjU
F/SaA791WIYUqO3H1yIT49I/OLAn6F2WmfABvMB6l9FmIycaWZXoCFAAX4w0
ao4ncOLyn2j54rmDeKtOzK89lROjre8pqArroGm6U83rbE7cIde4bXSPDtJZ
COvdLeNE3lhh/glfHTT5bmui2MmJ4gZeqU4sh5D2nsnJQZAL+yfw06OtumiQ
pvN0Ko4L9253tDsepYdhTe39t1O40GiUbKVeqYeN0xdEhLK48GnZV03rMT08
rOt7X6uMCyUesEw8AH3U+VPidbubC3XVfHeem9dH7V1bDQUluLFm3c+kyukI
7vzIOr8nmxuzdrA/ck4xROephB0tBdzIY1OpONZuiIWiW+wtyrlROSbAqYjl
OCo74EDQR27ctlaYvs/9OCry+TQ3/+HG5ZuW1YdPGuEW84lUcxUevBvMtmc/
90ncSGnVC6zgwdfpBxJllowxKbbm0p8aHrxDsePsEjmFIuqv/EyaeNCsT+9N
hSZhn4ev5Hp4sL1iJY7F5xSKMVpLttN48GjHAv+P5VMouZE6L3VgA6rPxwT4
cJzGbSCdXVe/AZOWZHdoHTfFnF8Ctds/b0ABM+niTe6muC2EpS+xcwPm6WVe
2pNsinLNf3mvj23A0iRZLc4xU4xXMH/HzsSL+R+MtfbdNsPEkq2Kr7byomHw
lq6p+rP46GMlPeM1Xhz2tdO76GmOU4MvfSgOvFi5+F/N6TRz1KflTPe58KKI
a7ViYLM5zm1/8KvUmxePOO3PdZe0QKO46++vhPOix+Es5l8tFshgKXGrJZcX
05MKFVeUL+D1GX+6uDFeNDUovXgu2grrOD28AyZ40UX42tPuXCsU2Wo/ZU/m
xcUd8V/ca62w0cx08NACL2aEhZ1mmbFCqWqV2nlmPuwlL+57aHoJO8IGAs9t
5UML3pBNt7dao/amg+tSNnx4tn/f2eN9l9HAosPN+iof3lCgDijRLuPpFLux
pw582H57kElN1Aavi0Z93ubJh7TIpsYyMxt8JNSXsj2UDx0dTBLSumxwkdtT
UzOPD/vXqQJSP22xdC3P9QSJDyfnNz9cZLmKtfu1R2Om+DBl4FCTmNJVbPX7
cvbbHB9qw+XOayeu4jBtHs6s8qFO6pNd0UlXkZ+qw2POw49/dU92L2+/hi6U
n/lXdvLjgcDogeAL9qg0yDvi78GPZk2276NGHdDot1TdDW9+ZDTYUd/B5Ygu
5J3pzn7E94p/evTUHbF05aTFpRB+nAnN7S0KdkRt0dgO3Xh+DL90KCB5ixMa
nuJr4Czlx9r4FA6ykzM61PPlJM/yowZdZLW5gCtGfZIOiaMSbrzQPKbgii+/
qVpHLvNjy/OgaxHoinODxpL+jAK489edKnEnV/RbjU20EhBAh70uy1dbXPGe
Bn+Y3C4BvOlx7V1tmBsW5PFfLXMTQBaZ+Lo1IQ8M6aw5yOglgBMriwcoqh5o
weAobuwrgB/ULneuH/dADouPbaRgAaR7uqnhVqgHXtngt3tLggDONZ0Z41zy
QKkbowwPKgTQYPdJGZMRT4w/9DrVZUUAme63qt7q8MLrLrZe7+gEsTwsbb1w
zotYZ35jLmZBlJy+XEon5I3TCw5MedyCaG1WYcxr6o1G+dLXByQFcdSw48dw
jzey8UVqGh0URBUzAQPvcR/0+8/yu1KoIEaru/lpy/jhnP7+VNsIQWSTK271
0fNDh2IJu7QoQRTcmFLcb++H5iF9NP6Hgsik+6pKtNQP9yqek6HlCiLvKw3b
Kwb+uOR52rWpWRAl/A1mnbwD8Ab3sQ223EQfYIG7432DkHxDsecJnxAODKp6
accE4ZVB9qc/hITQ/om+FC0rCE1LmjQMJYXQ0lubXNYWhLvP6V3YtUMIL/eo
XFWVvYVzWQcL6I2J3+d9dNJvv4Wu2prHnsQL4ai/5Q+nfcFI5xQfGJ0khLUq
gcwmxsEYlTZVEvRYCFeY+dqO2QVjPsMzictZQvg6VNTZ90EwDjWJkuVKhZCu
9nlGBykYT59Zjin+LoSku74Ofk9DUMPpXVc9vzDWP3Lx55UOxfo0Mc5yYWGM
dc+JztEKxVNfb0CumDAaZ3jtNTkVik7qO/Luyghj4ImBlKngUMylpfkYqQnj
8Q4ry/3joSgSdkvih7EwOv9M8lQuC0Namq713xhhHNZ4lf+f1V08QN0fp5og
jGZ7k9SqAu7iLaM9dV7Jwshz7HFr6eO7yLaqIMOUKYwK/43FrP+4i0LnNwxJ
lAij+oPSb/OnInCnYO8lo07ierUmcj6GkWgb7nypWHQj5tNebPM3vY/tLo+s
vDI34mVShEffaAwqxvAue+RsRMXBvqJQagwGF4UmuOVvRKMzMRoH2WNRg+zW
4vhqI5Lc9p4c2R6LqdePqdvUbUSuC1Y/hz1i0f7KCqvx0Eb0rpTK+8oah0wW
F4oUZUTw/mxmQYnWA9TSl1nrzxDBwrLgZ3TtCaj+tCX8Y7YI/pwYl7UbTUCV
dTeB4mci+B8LI8MALQFlKj7IhxSLYLa7gTDjtkTklCPOz/ciSDwV927yT8R+
lry8G4MiWD/TW5+r8hBvNSqbbNgsiiVZ09WWaUnYfFgrDx+LYlu0Q9KfNyno
/TFAJTBdFKPua65od6Wg/JH60uosUbzhOX4ubyYFQw1PvN9bIIpKtXcPfVR6
jLomtr3q70SRLvVlglzaY6y1iuVSGBTF+Px9gUERqVjh+8eFb4sYLhx/eZnV
Iw2zi5O1hp6Lodgnu/P8nzLQftlc8UeRGPLaaUub9GXgzsOS4m0lYnjzlJ1G
+t8MfPsjc+VNlRi+iLO/dpErE7+vP6+J/SSG1YMRdW5GmUhv9O7wwb9i+Ovo
yS+zHZloOTFknK4ojqEyox7xf5+ikOx2+wvPxHHcw1aL6WAOxsRFmj4rEMep
XHKClmkOcjD81ZkrFkdbt4rSwOs5SPfrmXhEpTiyRe6+fCAxB0lP5D6XfRJH
pzNaL0JJOVgvJruTmyyOlEMWBw0f56IHv9hClZoEum9ZEqayPcNv9Gy3Rd9K
4L3b5sJaoi+QXJB84WStBOoF/673U3uB7OeV9oXVS2CMHuno92MvEF8Zzc21
SmBlyVaONwEvsNA64Up7vwQWxnRGXx19gZEfZI6FEX23waTT40vlBah7Z7/g
vA7RZ1/dM8JpV4RlbO457c2bsOfo4MM/t4txuxCvvXWDJEa9OOwscL4MKVEL
gru6NqNl0JwqGFSibFjYDmd7KexPO35yT2kNDp3v69X5LYX5OW90Z6fr0GD0
+1KZkzQGb6b9MeltRG8326vCk9JovKIw1yr4CY3KU44K35DBudiUrdk725G8
Yu/HuCCDnnEqh1U5vmNG961SJ3dZZNDq/sm/twtpV/db+SwTfb5NTsHZ7b24
aTXW3PXmFjS9/edXruV/OKYf2cLGtBVPyDA27/3wCz9sawXJyK3Y08Wn0/N0
BO3Zcpik2bfhes3W2Olnv7Eifcv+D7HbMLN333LWub/Ytk+74RSfHBZmrVTz
aVBw0T7FxCpKDqtF9b2jy6ex6WTaGW5heSyf7hLddmgOrbW0c3Pj5ZGLMdyv
bXwBr01+nv+ZKI+h2y26YH4BXTIu6vIny2ORksOXcnoqBrIH//JLlce38Za5
ZWJUfNzTLH4qRx6ZlW7IUQ2p2OVjFrNSIY+1i62qka+oeLTSzce4Tx7V1m51
Md9eRGMnpqbQfnmkeJTz7ohexLMyicJvB+QxwUV2+4XHi2gX8aZk24g8PvvC
uaGtfBFDztORl0ny+DWEWjP3dxHf0e5b56zJ45fKTbkXzZawoXBzcR+dAn4t
6Zz+bbOErdbF67yMCkj37RHccFvCvpaOx76sChhs10nKur+Ei4/Eu0/yKqCP
xETz0folXDcq2BrKr4BSTqNXGb8tIQsjeFQJKiDJh0eibmAJBa9b820TVUCV
HyEfjZeXUHzz3EVzcQVMkpWul2Gnocz3O4UxmxRQV/xu/5IwDRXDNq42bFbA
ubxRoe4tNFTd9+zYsrQCZhlYOVeq0fB/hXLP+Q==
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJwd13c8Ve8fAHB7r2vvFdmykoTncxGyKmVlFBmFrIyyQiVJhZBkfa1ECBkl
I6mQpMgmZCuuvfmd+zt/3Pt6v+49z+c85/l8ns85Io5eZs5kJCQkP7EP4jd5
A13Hn6PxWiT/PwjIzINnICWhAR3OOcCORRS/bFuRnPAdzfXl/t+eNvQ+y39/
oDsDlP93ouaV6Gcs3SgtJm2P6BclnOzXRH+hzALnXaLfCX3KBJUedNakeJvo
9rjrMux6veiHjsEm0b9JRaunLfuQnALJGtFX1LdCfoz2ofaA5WWil307tWuv
9qO4G/EEooOLXtDkLfejGNOf/4immAjreBQ8gGoWC+aIfsRvkXiDYhDV8dJM
E81lLnfB8eEgKtQaGyfadolbs/fHIFrISB4lOushhbAx5xBKdhQbIVr68+Dk
0cwhpMXQ2Ee0l+OXlsI/Q0hWrvUX0W/2y4uEJIdRqvh/P4neTM14lOgxjJZN
Tn4nWvNYjA9t2TCyHyv/SnRkl//5sLVhNLQ79YXoz14Ox1aOj6CLGSMfiT5T
oLY31DSCuNvoa4lO0hUbPUv9G0m/Uq8iemCU+eNno9+ItEmojOjLPNPRr7t/
I7I3e3lEd1+YrUxgGEXCLQuZRK9LXpT4Jj+KekKjnhF94pMhnfb1URT1IOUB
0Szd+d+PPRlFv88/vEP0xDhZklzFKGqtFgv9//0jqRXiWRlFi3wy1/4fj5lr
koltDCWWxDsRrSZ4vZBCeQxt7ty3IXr8hMxRgu8YMrQUMCC62vDe9mTCGCr7
VqJJdKz1n4bB8jGE66hXIvpo4HPDL8tjaP/uST6i6aI2mOtYx9GEQxkT0SOJ
536VK42jfKYoUqKjy+kvZfiOo6CTZpP7mO0+uIonJoyjN080e4hW6vw4d798
HFkcv/mZ6KF/wf7+y9h4jF9yiS7b7VV3Z/2DOO58TSA6il6FxEHpDwoboQgn
+ojU3xhj3z+I+79NS6Ip1AzOaCf8QTFVOdpE9+nlcqiV/0EDNM6yREc62WYd
Wv6DSq/Q7u1h7slsr9z2mUD8bZPxRBeVSAYT4ifQjbUzfkSH192BqbIJJHkv
xpxoqUGNrz+WJlDqDWAnen82Je4LbhKxURcs7WL+ublqXqc4iSIt33wjOoSz
eLTAZxK9+vYoguiz4rT5GfGT6AqbnjXRh1Wc3RPLJpGntd8RojvPCqzfWppE
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
/w==
        "]]}, {
       Hue[0.1421359549995791, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJw913c8lW/4OHB7z8OxxzmHIltmyHMdSUUps4yESsjeMqJhlLSEZO+GrIyS
mcyKIjMzocg59sj4Pufz/f5+/uD1fp3jvu/nvq/7uq4H7+hpepmGiopqEf1F
+Utbz/Llp9pDXar/fsiIqZvgUPKjemTvvx8S8nDJtjzxUdf/9xg1oWrm7ADy
/76v/dGQRc93HGH6P/dlfKrY8p5Csv7PXteMHcq9ZhEaxv913iobYmszj+gc
/F+7V1+Op5EgI2Ks1P85s7u/s1dvCbk6QPefe2dPMBc4riDiDtz/WZENd1vB
bg25Q5L7z3cU16gqrTYQqkWz/xwuf8Go5voWomEo/5+9ZdueNORtIxns1f8o
66fZe75QL7eDMJ3o3KD40be7x+rLd5CC60krFFu/317WXd9BWibGFykm5Ltn
1mntIlPdLxcoZhDODwi33UXElofnKf5zf/SkbvguMs396w/FZcGnN2sbd5E7
MwHTFCcuRHeF/dxFvoRt/qT42sWGvMP0e8i1juMTFNsNbITs7N9DWMBhlGK9
U8qmtcf3kP1CyDDF+5tcpMNc95Bs69F+ilk0snd14vaQ8BatXop7cDwv33ft
IZcWBT5RbGCjmJg6vof8uDTWTnH1E6PI0MU9xO7vg1aKjembZNOZqaAwuqyJ
4mjCGTwHhgpUDuIbKG5ARvnChahAWCKoluKD17ao7WSpoKh7uIriq0kx659V
qEBpe/oNxblv+P4e1qGCK0b9pRTzkQ4OiJ6iAraViy8p3rp49fWIBxUk+/Gm
UWzPvRz0PoAKNFZ9n1L8se7akWfhVCBdXfGE4geCdwbOxVNBVdaPexSvtXDn
aCRSgQBzQyzFtn5P3fnSqQCjeuM2xVJdhTS9RVSwyJ8RSnFcqNLnsgoqSPm5
Hkjx0oHqpIe1VLA/WdaX4rpbrXKnP1OBW5q4C8XmWtOWHfNUoNonbEbxuxl3
/PMVKmD8Kn+KYvEnq3PR21Two5372H/nTaKLPMpGDQ/fGmpRHJkn8bJBlhp4
d2zEKJ42femfoUIND6IG+Sg+SaUC4drU8Oi4GCfFAjZ637WNqKHab313F/Vr
Loe9SldqkLzyfphi3rrZ9ic+1MD059g3ioOveiX4XaOG3yX32ijWb7l+4OAd
atj4Dm8oHg5JNyt6Tg3F1VwxFMOB/WJxpdTw48ehUIrz+4pmXd9Sw50Gdi+K
fZRrw6Tb0fFliiwpZpoZLsiZpYbuqLviFHskXPS5QaYGwlYnF8U9xDkdhw1q
KHyeS01xeurWVzEmGiCG8U7uoFYzFdx+KkUDUWw5aRSn7GW2BCnSQEKf9V2K
qYqkH57VoIGTPxKCKP7EqLkfe4wGxn1umlDsWGt55oETDdiyLG1vU+KtUgAj
6EkDZDP/KYppiod6sgJp4EX90U6KszPtzpbH0IBORk0ixZM3nez6XtCAPp2/
JMVlodK4C+U04JU4TE/xDf8/EzM1NKDQeGX6H+U+X/G4vPmJBuhXhnIpdjQM
cBMh0QBfcBwfxQePaCrkrdOA6okI8hZlfp0tkjwVLUgnurZTnC0f7otw08Lv
RKYgiie5oq45qtBCVOfL1k3K/MzHdea0aYGBNTGZ4hs0LLu++rTANabrTDFh
5V7kbQtayHAuoqXYsf9JTGEgLdA1ichsUObvPmuoHEELOmHC5HXK/O2CbO9i
aMH1TeIbirPfpd3vfEoL+oqjmhRPpuUlLtTQAutYgfwaZf7EK+cCm2nhhv6N
6VXK/PcPCFF9pgXTk3fTKCZEFqVxj9JCavAuPcWOlypyVanooPuBcv0yZf7z
gU61THSQ32joTDGN5SFpA246MNHU4KQ4+1jty7MEOrgyfNZyiTK/zMeya/p0
4HXIqI1MmV8i2o/2FB18u/HYjuIbIifU4yzoIEBbf4lEmZ/j89s0JzpQiMjl
pvjiYm9DQwwdPGCpUvhLyQ/XHpytfkAH+zrVq+Yp95325EJxMh1UlzEdptgS
+0E4o5AOSuqvwhzq44dKA8La6OBkQrrkb9RHm9zY/bvpoG8ZlzhLyadG0rlu
A3TA9SCCjmLt8xlfbWbpwF84uX8atULkPTktJnrwtjlvMYVahuXEB2Uuehi1
oHr1k5JfHtNZHxCgB7fwrd1J1Li8kGgBaXqo6Hj5dAI1T7vL5NoxeugWXc0Y
Rb3BZZBcHk0Px3eeowmbhKw8pVZ8eZ8exFqeLPahXiTUfsxOogeeygd73yn5
RFV1+WEBPRg0W7D1oh45RzD2aqUHBWnf6S7UQxMjU1e66KHjpHLXF9R9rk9D
LvTTg8mMRtln1N2hXM+NZ+ihMqjcqRN1U+YurTwjA3QzXohqoeS7A+9SJDkZ
oPCNne5H1DVl/soi/AxgHfeR9AH1m+Z5O1YpBpBOOK3biLpgdujtbwMGGAv7
E1VDyadKVZ75UQwQ8tnw+WvUHQf7p/3jGeDOqPfiK0r+UFs/fzSRAfTzDym/
RH3rkMbJqTwGGD0llFSAOkSvSprwkQGEmVg3Mij1SL8/Y/ETA9C47d9Mo+R3
g3W+xl4G6AwtIz+j5CcjDXr7KQb4InqtKQm1q3nVRBotIzxWVpuPR11o2X/O
nZURztQeS42j5Ntz6106PIwgkh1AvIPa4bxG3TCBEeo/+7reRn3OqSpFUI8R
8lK6lUNQHwuqMnsSwQg1W7xXL1HWe62/41IMI9xoNLR0oOxf6DpR9QEjdJQE
q9ih1o3UUOrJYIS6zxNNZ1Gr36li465nhJmQGEVD1H5x/TfHWxihAauVa0CJ
//j1reIvjCBZzsF8BLX8Y43fxqOMwIuTytZGLZla9TFuhxGeXMewylHuX3q/
ji09E1z1HduUQp2ZuV4uy84ESl4tfRKoRfI0sjtEmOAJ1xcrYUq8va4KZ9Jh
gs0ftGHMlPvZUKVx6xoTLKZh1yd2ScgLdkz+zg0mUBULVPqB2tTGjTfwLhPc
H5c73Yc6Zw236JLKBJYXZrQ6UOvL33lxuo4JIgJi60tQz1+bEmhvYYKLNdH8
L1AntOlG63Uxgf2alUkO6l8Xly+qjTNBVEm68xPUUSm2osI0zNA+byYQhFph
tvJuAgsz5Pbme3uh7lPj3mLnYYY+QVKhM2qprx/7qCSZwZrerPgc6jZGxQfT
R5nBr6KCTQM1iz81bVksM8DM3/j5HXQ/m2y8ZR8xw6B8ddQkamuuyrHcFGaw
SL5tNoD65UvX90kv0fFUS10+oD452eMf9pkZrqulBCShXlFUmFr7zgxMWQN0
cahTw2JMvUaZYeDdpmME6r8ChxUvkphh4YVSnDPq+NP5s8e5WcCHiLuujlo9
jepskyALaM4pBh9APfrH+qM2gQWecd05LIJaMYozW0GFBVJm5QjUqLvfB9nw
WrDA92wpg7ZtEsItY/RlLJkFph/KGxqhnmbM4G7LZIHsLOsibdTvfi2ZlxSy
wFp1a58s6ktZKcMR1SzANZEQzIq6WuDPLH6ABYxM6eda/6H9ImMs7SV+VnAM
0B1QRa3y64fBSXFWCJBnPo5HzfRB6Y6qFCusSUj4sKMuCx/gotdghSR+zqWp
LRJCvyYllm/JCrmbi7EPUL+aatGcfcIKGUYfzg9uov1Mk1BodxorFAo0czSi
tsz0qK/OY4V7/KFuhaipbPkMYitYwf6it0wAarOey2Yy31nhdW5ZIjvqrUY6
DzdeNigHzfOyGySkK+NcqbkIGzC5hbqwo84Ne7WiI8kGye80eUjraD96yDyE
XZUNLr3l1i5FnVWSE/PajA2cJyrqlVAfz9DLIT9iA8+QU+XCa2i/2tY9cuMZ
G8jG4mlXVklIy6KdADaXDezfmXV2oj6qH3LvUAUb+I+q1wej1vtdHnijnw2q
Hp9m71ohIToq+07yirCD46fPe+eX0fxkWx6VL8kO32gyDsijfneb2Kgpzw4R
Fslv/i2RkEMD59XP67KDtCLVbCJq9bBEXL49O7jlHk/5uEhClFoZVzXy2IHX
+kgfDZmEeJKfKHYUsUNQ0bhNKwnt7wQlXW0r2cFwVkzmLmp5NxiLaGUHh7fE
FC7UMtzB7e2/2WFL0jkNs4DmB5s/aTYKHICxl/m6OIfWx1tBA3/VOeBOb9C+
F6izixh4IhAOmDXwfe6AGk8lEZN7hgM8PQ5rfflDQsTybHz++nBAk6eQedpv
EsJP+mRwvYoDrIUlsZgZEpL8sN7hdz0HXB44g9RNo/2oalmoWRsHHPa6G+tC
cXBSmdQgB9TL1gXV/iIhQrSOYt1bHEBzpyHVegodn399FafLCXFpf4acJ9B+
8O1vrrsGnJDAV+HCgFrc9ofsqjEn+BrY0OWMo/Uyq9Gh/QIn4KffnxscQ+u/
bNxn70hOsFW5fUFrFH2/QfB5Tc2c0PUtgv7zENqvTvA0yH3mBHLLRJ816v23
GIYTv3PCrbdduTODaP5on+O6Os0JqZVeKrsDaH46YFPHTMcFnxB3ZvF+9H2r
fJ9M2T4uiLCylVDsQfvR1nfUtC5cULLqlhzdQULI4yXBJDcuOFMscmy3Ha0H
W/mLw15c4M/Rwu2HekXu8cSbIC5Qpc/fsW1D4/PR1UanGC6omf+tL9mC5tvz
IpEdBejnSuWusY3o+9BSGNWjaS54c+vy/uoqNL5EiXu4S9wguKTGr5WNxq9t
r4+jMzesffuEDc5C3zeeXZnOceOGkiF5clUm+v+C8Z/3+3PDYuJta7UMdL3Y
4WdyUdzQab9JpZSK9hPs/pqahdyw/u+JnHwiCaE7xfQq+BX6/Rs5FzyekBCu
uGfiNSXc8G87jbskAd0fliYG3bfcEEXdJKH2GL2/DJzfj3Rww67JgsuxB2i9
3y30Pj3PDXsHVKqT76Dve4d1fj0gc8OxnjKt2Vi0Pw/tOvdthRuGXl6UOIT6
59YqYrHDDdcEDriNRZMQzLoehw0HBoY5HLuR22g8qPdFpmIwMC2tGZh6C41n
f5fVET4M1OWw8f+7SUKIy/d/2ItjIFaO61HdDRLiRfrxwkkJAz7u87X2ESQk
VMFLrFAVAyyTt3y6rpOQGHfaR781MWDIv78TUGfMHQh2I2JATWjwo2w4Cfky
E3DMxxQDdqc6ovaFov3RfpaacksMbJy6vfsyBK1Pl9MUVq0x8N0tdFwN9fbP
D9igixgYTF83Nr9GQmTHuabC/DDApG49VReEnu8MrikgCAOVJNJzF9ReC0qZ
nqEYYC8KVxBA/WgVwp0jMLCpzX+3IxDdv+0ztg63MPDF5+BgBOo+Wgct6xgM
5ESXHdRGvcHiLWAWh4H3l6ZKNwPQeBB82KufgIFfPa/jbqK2w2WVHU7GwGNO
WvHTqCOkSh+op2IgRfGmvjjqbIVGD8VMDNCY5Auu+JOQZrWvJ6VzMfAvy7Lm
M+ppnQkZfCEGtgaWDF6hZtJfZBJ6he5Pwemh+6hljKhnMCUYAPW3j4NQnzTl
/sj6BgOJeSsPnVB7WOFz6KoxMB9PXLFC/cBeOXKnBgPid22GTFGXXSFeWKvH
QF5jyCUT1L0eJodJHzBw1c+63AL1mr+D8GwrBkwSlWYvoBYI894c78QAw6W3
kl6otW5F9g92YWB8V+VuFGrbuw8rvvWg68Nc1s1BHf4o63FnPwZ8/ZIdWlBn
Pi31bh5Gz7MvW4DsT+lfG0/XjqHn4fkzGofux1TBV/nKnxhYeHO09yxqhuIJ
1uIZDOyxH5FIRC1dufi7YA6NnydTKcOoDWup2zJJGCANNDtIo+fh1syd/3QZ
A9653BmhqOM78bceraPP237v2gDqkm/Kjnf/ofG89EhEBz3vb4NEuLWHAfUw
ntcFqFfGTcTCaHlg7mTqOeFgEsI367Dtz8gDLOWWBkmoNUneQx6sPKBqypIt
jMZX6M7DRHseHugaTTfRReMvnS7bz4qfBzzpNHd/oG5gLTM1FeaBkQ+6HbfQ
+KUT+sahL8ED6QNKweQwNN/hJ+d1pHggKwT77g0a78ellzrUZHlgyNOu7wZ6
H+LUMdFSKjxgpPrk0uFItL4cJlzGafDAmaN7h2TQ+9Wtf/CIoDYPXA3sKMWj
94/XzHSP5QgPHN65cFYZva/q1o4jtMd4oNTEY+FEFNofO/jUbBvygIOB65Y7
er9TPR8FLpjygJfLhtEgev/rArItZizR5zs4SoW/S0LGw8pUxq15oOr6eWb/
OLRexX0jfXXkgeLikG29+ySkqBDjXOHDA/wE+vlQND/d+l5PpA3kgfWo1BjT
JDQeaNyFTUJ4YPnIyg/Np2i/Z9v6Zf4mDzza4FjTTCMhEzF+hVox6H44BDqa
ofmwugJ/IyaOB7QZlr9fR/OnE2eomuQTHlBjJSpy5ZOQwzoHOH2e8oAE7XCL
XyH6vC59s/Vp6PN9Fm+ff0FCPjQppdrk84BpcdN1gRK0HgX8onlcxQNcihk4
lxoSsp796Md4DQ8whcR7+tah+aULqVRo4IF/bFeUE9D8HnYgxaWjjQfGBFSL
hNB6MPTDuJt6iAci4kLUjvWRkFLm7eenR9HxTrU0cqH1Kkb9+c20SR4wf5Ik
tTJCQjQe0GocmuOBcDtdExa0viYcqU7z2uaBe61aqpFof3PV63JgHRUvpJoL
PN2P9nt6aRgTNnpeYDqt0eNHRUYW19zoCtl5YeNOvsNlejJi/AJ/dUyMFzrs
zb/TcpGRff1f9OUleEHq4pB/L4aMbNOGioVI8cJ+6zrWSiwZeXm+7yufEjp+
UrJWkTAZYeK+q2lM5IVf2pHffKXJyNhhTUzqUV7IVac92itLRipdf839PsEL
eoa17McVycjlZiTjtikvjLSlTbuqk5GmwBX62ou8YKYT35d/lIyEjp7vkY3i
haKL7Pf0ncnIyrHDaZfv8MJ0fdbteTcy4lYqciUjnhe0i5/FvPImIza3hrcw
Sbygi7ORDQghI1oyVoStAl5g95pO0XpARsoea86rvKKsZyah6AkZkdnhr3Qv
4YXmYajUfkZGhLr7TkxU80LQuTW+l/lkZNPf3LutnRf0tfU1JuvIiNeYijbN
F15oa3Q8ofWRjMwe56HX+cYL5wqYN0o6yciA8Lfk4iFeqDZ7Tb09QEaqG083
JM7xQtbr4W3sKhkJYDfivMyOhf2W5JQ2lUVkIUBmMJ0bC0epvVb0dRYRp3Hm
nAEsFrjoL9PO6i8iluVt6ifF0M/Z1G7nWi4ialYGdiqKWOh9/9WGMXQRedW0
T9pdBQucl+OS2m8vIpJy9Ev5GljwZsPoVd1fRHj3PtwWAixkYhSd+HMXkZVc
YhG1CRaufU9f3v6yiLhx4AO1LbBAzeOZKTe0iEwFUhH9rbCQ/hCzGfdrEekx
rO+ddcCC3mmPgMntRaSMrLPd5YOFRfHwzBX5JcRbR9MoPQELTH7v88+nLCFU
HgnX7ydjwdf8quVKwRISn0Euj0jFwsLljZ36iiXkBc1zkYu5WDB/2LS18XUJ
mWwTXJB6gwU2I8n79OzLiNeWP0GwGgt9dw/2nBVZRnZlv1myvMfC++XQ3inZ
ZUT4/p36+Q9Y2MUWiJQZLSPmFv8elPagz0u68EIxfhmZjDr7MbsfC0kCxGL3
DHS86vLNx8NY8Hqs/Gm+ZBmJE3ZzDPiJhYO/T70s7V1GPk78UNFexoKF7mNR
D/EVRN2jrq8Zwwf1+O7PIU0rSHOGEGslHx+8l1MfURtYQUy/BiAFQnwwlCLy
DllYQTxUFQtjCXxwc8Rh0UB4FSnYygg2PsgHP/dmUiF4FRGIjhQZMOEDp84f
+L6ja0h+9ciZdgs+4O3WuMDhsIao/jl0+50VH7S6WhkUhq4hZ04t/U114INt
hSpGhoo1JJbnYr2DNx/sSsrOx8msI1sZ+o5zD/igUJ3t4tKBDUR3/fAj5Sd8
oEm+FPHBeAOJNNZoCnzKB9UWHoJ4vw2EaecAgS6bD26tzvvGNmwgWGvOSZFy
PrBLPadpYL+JKPEOORh/5wPacUKEXu0W4nu152HCILr+mrvUX+e2kMqmT41D
I3ygff8rK4fwP+Swdz3+yjQfpMS7G6aF/EMMv+ROXF/ngwC5QFWLo9vI5RhP
h1JBfnDHGA+77+wghWPOD9dF+UE71f0bVnMXmVd3bDxM4AdlR85nib67iM8v
c3yHDD+4rh69pfB3F4nQ05qY1OYH5xJ5IvvcHpKyTefAa8cPw/s/ZciyUMOo
2e4Da0d++DhSOU6rSA34l+sNmU788KHFeMTRnBoKrf7g5D35QXCYxvd9JjVU
VHaNH43ghx/KUa48QAPdXin2gdn8kB5a6oF5RgsyD7j++eXzw5e+o6nyLbRw
szjqic8Lftgz39c0tEgL6gs+He5l/NBq2x6+ZEgHaVeNVC818cMorfKPU3T0
4Oq0zWgyyQ8stwaIIU8YoPm2T7bxND8MRIcV53UwgGjerM7JP/yQWdV04iYV
I3T/7PU+tsQPrLnXTRw8GEHDoWj4MI0AsCscuTdnygR0tnbFMgQB4FokGV4l
soBdSO8J6f0C4KZL94V8gwWqUgyn9skIgG05V5zpRxZwHVQXxB8UgIdudIcr
T7LCV0vOm/x6AlBppUY0cWKDdJMGSzpHAWh9kfs1vpUDNrzUF6mdBMBDKobl
mAAnmD54dXfPRQBeDXy043DlBPqu5IYtbwEoy1I1cWPiAreT3jKLkQJw9ES+
7EQFFxw6RtgdyRIA3ad6Y/vkMaCa0xHTmicAB9s9OH+ex4DCng9P6XMBcPd/
OwD3MUCo+iB9q1QAsD1cj6fRPolVCn2fbxSAyOdOH/k+on0KQ2FhwLgA6HVv
ctPFYmHA8YyK/RS63vev9L43Y+Fb3UbtiVkBkNbu3rxKzQctASd6RMgCkFsf
cW4llA+Kp//sNO0JgA6R2b4mjB8iW+TNOMUFIfXoAFNioSCEEvpGNgiCcGng
OTXLkiAEhIc7T+4XBIZa8ilvHSFwVe8Kq1AQhLEvL2v39wqBWb5XoY2uIChV
WITHcorAvqjynYLzgqAtnnPv0FsxwE3axDx0EIR326azoTziIKRLxxNyWRBg
q8N/3kMcONbMpY3dBeGL1Cp3CS8O1i+vma6ECsJ79dP2UX04aD96qBBSBWEH
m3YvK5gAQa3hCtczBYF903RuooIA0iea39TmCoL0lcaW7SUCRJ083ahVJAgu
vlKvvnhKgL7Z5SHVOkHgpivq1fWThAb7h2wHxgXBqart19mX+8Frsu/RlSlB
mOFPK+1f2w/il0QE82cFYcT3X5nrESkIv1KwT2JRED7/uOM1NCYFOh61uqI0
QuCX37Bivv8AVIX89uKWFILhtSv34/7KgtOOwvppaSEIZpqW1j8pB3zX/cLi
5YTA/bVHv+UrOfC7sRfLqiYEwis5w1le8nAwFptDbyAEuoOVBQ4sivA6kfh9
8wpqfWJB2RFlsBOIttF0E4LKFmYbhevKwJ7yaSLASwhWv+VK3K5RBre0swvL
QUJQIME50a1+EGRy3RkXYoWA2bvFQFdTBfJKnx6afCkEXnXr7rdd1MD1n43M
QLEQ/DV6bXGiWA2UjooJfykXgpUwLebdVTV4P5C9/bZGCC7mtIoci1KHnr2X
9Q87hWCRQfF+VZkGUBvXHSXOCUEsAw2ioasFLUkR6hokIWBTJJOKE7QgbkJP
Sn5ZCEwZWIjm81og4N/KJPhPCDr53U2UMrRBMbW7k8wiDB/Mxw2KeA7D+T+T
JpkywrA4/pG5RxSAoJqnl6ggDMMvLt72MwOYDbuiEndQGGxrcv26YwH8uOd5
g7SEIeWRwnbjBsBdzdX+04bCcBdp6Pk+RoS3UYx2ey7CQEhbOqj8/QiEd7cb
r7oLw42j4yVN/PqgLxSHzHkLw1vCJ20dG33oLuLC9wcLg8Is0XBlSh9megWn
XscKA5vrakQvrQFgJeRc7Z4LA8/f7aXzPsfhwaO7ls+LhGGeWXuF9tNxYKGZ
01spRdezjydqZ/8JoJp4LnznnTD8KHEt2hs/AfPpUp8rOoXhe1t19LfLRnCF
I/otVbcwONwoYSroMILJsOk8o15hCJ3JqN9UOgkDtnnhEz+EIcFAqVCJ5hQ0
C0kosS8IQwyzJja2yhiQOzdEzi0JQ+Fx1cvL0qfh3eYEU86aMMh88fvBmnoa
SgYyJzT3hKEn6nhgyZEzkJoo9vgSlwjws/DZvjhkAn4YobWagyKAHzIuQ8zM
gBQZPMmgIQIPaIPdqJ+ZgeviwBcTbRHoyA937/lpBvbdSQUzR0Qg0jsvsDrI
HE7GY614LEQg4Nhh93/FFtC643fUzkoEDgYXVZdTWYKee6/y8/MikEPkM0g3
tQTNk49ZECcRKOKiOyuyZQkSLNzvXQNFQELR3B45dw7Sg70KK0JEoP3Wwlm2
8nMg8LsrgSpCBMDkW4UypxVwtMW7J8aIgFd4LHtKpxVs3WYTb3oqAmzu41p+
FjbwjZrphuB7EciVxqdIl9nBQtFTuzMNIpA23ho6T7gAzNay2tHNIjBVbfjG
7MkFgDLjlZVPInC77o7qI8QeXjs+ceoeEQHcOYWhOhUHuPuBYBS9JwIPTesY
XY5fhHzPN1J1tKIQdVsh0uX+RWgSNqBbZRSF5pXMMO/+i7Dl61LryCUKLta/
5ApcL4GzZImiLl4UItXSc/jSL4P+7cO8q3qiUGHqtZ6u4wz2yl1k2WOiYJy4
cHb7iTOEjNh/djQSBY+jvddzyc5QpnYrqttMFNJpxPhnn7sAbrpj4+UlUdBn
3HvTLHcVtg3OjThGiQIzo3zAmSAPEFj+/fbpHVGoM4heq5z1AJWMkMTueFHQ
lKTBv7f2BNf19NO6SaLw4MAWwwjeCwYKfjUKForCbNEwMz/WGyqYfPO720XB
+YR+vIGUL0yHRv6t+ywKOZ8fM4q7+ILA4n3Voq+ikKU7gx186Quhg6+aYgdF
gUNe+PuOih/ov5ge1fstCl0js4cunPaHb0bW/BVMYmDl7jdyqiIQ6Bqc7XLY
xKCgvFj+LUMQqKsG5j3kEgPn85cMtKyCIEUkQcVDQAw6z7Gdj6MOBoe/n09L
SYtB0kLfnYEL14AcT4x5ekwMVhVpmkItw4BAe6Yr2kgMsusNjTE1YWAeaMcX
cFoMfMaC/Hdw4VB9ISTX9CxadxojrabJ4XBdqaKB9YoYmFuepWo8EwEc36Q3
w6LEQMuwmJ1x3w0AAw1wuyMG7rpbdwUu3gCfd0ejrePFwMnxTee/rBvQl+2I
1UgUgx9ecZf1CDchzTdVmZwnBnI1Bc2i8rdADsvl6vhRDLgdTGaTPaKAp7jm
VV67GFSU+h7KbIyCreNXSLOfxaDhyKB9HzYa2kLr/Dz70PkYIzjGG6Ph0pTb
9dAZMfgVIio0KR0LaeXtCYnM4pDtdsQrVT0Obp3y7x9kF4de62nsi/Q4cJvB
CYlixOGtle6yEtM90BIOysgREoc4NTvZ+rF70Hdj/4sSWXFQIuZa+GbdBw7T
m/Udp8ThjOTECObdQ1idU6DhMBWHNb3PnIr/HsKP20P6JpbigD+k1qF2+BG8
eKvc0W8nDvmxHWWczY/AAD/eO+UpDsqXil+bjDyGcLLOn92H4lBA73WNj5gI
l+/MyuklioNjoIKQ36NEOCmZ4Hk7RRxiJq+MrEwlgtC5uRXWHHFwo1vL8ryX
BJX1T/cE3qDz4+37a+aTgRS/xqvSJw5f25x4XGefwTxZrEl+SByOy7nAvmOp
8Mf0mKf0qDhcwxyPESpIhSm+5HbRaXHINE1Q++CaBkPph8KZ1sSBganfJJw6
AxzP1i0vsOBgrlj2l5RmFjjEmBrOs+Fg0PKR+xmfLLB/O535mwMHKr0i0ZpF
WXBemNN4CoODkcDmnTP7suHc2IXCQSEcnMr5HD0jlgOnrlCfb5bBwV7z96zZ
Q3lwMvlJeaMcDpIXPg9oRuaBYfsBlnoFHFC9irT3ac+D47KmVW8P4oBjapn8
yjYf9EjZ3MVaOIjdcv/7KL4ANAP1W54a4uCNnrtsP+EFaBQOiCSdxMFP3RfU
MtdegPqgm2+CMQ5O1vomJH97ASraT3D3TXGgrXxysi/qJdov/rp2yxoH6kfj
MDo7r0AiOlrR0xUHzrq9KgGYEvDpUw13dEP7qLO/ZDsNSqBh3+QnCw8cGLYx
FnwMKQG7Zh1XHR8c6K8bcpXPlEAK9VIu8zUcjG94Whe2lgIm1FYoNxYHRsdH
aPuel4NDJ7NL0l0chLet7Ib+LocSoaqqO/dwsKouMTN34A0Yv+W28H6Ig0Sp
0/9kit7AnbWW+7pPcdC9/Fbcp7YCaLyV6QcLcVDJnmplw1gNJg2jZp9e4MDu
z8bNV+bVkMkZl13/Cgf9IbR9C9nVoPt6GskvwUHpltNJU723cG3u2TXfahyk
zFzu+hX3DpYuM5DZ23AwqlaU+susFogV5brUHTig2y4KLy6thQd0DvdWOnEA
yWbDz7jqQCGnRma4CwcBRYLJv7/Wgeu41+XCfhxUzxzZf165ASath4f0ZlAP
HcyWH28EtsNnC+x/4+Dswj+BIdEmUBPv8Q2fQ+PHOiTQ3LYJYn52sL0j4cB4
JMWwdrgJFN3e6Spv4KAm+1ne86kPEBr2NFucGQ+VngcibPAtkH8B63mYFQ/T
PuRaBfcW6CI+1LZhx0P9o06lnbctQGCI7U3kxgNfzUO9ZMtWaIsPYuAQwoNP
Sg07PrUNsJlnXbdl8CBZqjfjbtMJujd61IXk8XD16IP4yOpOcL50mlZTEfV0
5cFWvk/wXvpYqq8KHlxFbZ+t930Cx1L1L3+00fm17j+zcvoCr5uwBwdP4iHL
3Tn57GQ3DOQ+3F0zxoPT01PCDsJfgTqavZPXBA82V5xeS1p8BXMj+ktnLPDw
Wz1L5mfHV/jXs/Kk9TweXg/601+v/wbHf/VsVnjgQW8xRsayqxfCZONDir3w
EOMUvuTO9R3KvI/vFPrg4X2Wr66h6XcQ3n1PlRqAB/WtZROrge+wwJfPeCMc
D0sXhcy4F/og4XgQ1jgeD8yskdY7xEFojz+YdOwBHi79GWgKeDAIu73zAsRH
eLBTqHQYHhuEKw4OIqqJeNiwrRn3ihwCrWuGEkLpeDBojfoq0D0M4y9FlKeL
8LCeKrnamzYK2KW+srFiPPQhF0int0fBUPOh6mApHkqFrDBTNmNQ3kyv+akC
D8OhT9QOco5D1MiCblktHjYHP9feHxgHOc7Gk+Gf0fM51ZioHjMJDhYhXwK7
8KAquC+KtnESEp+pnfH+igdkuudY0NYk7Em9MLv0HQ+FweXV9p4/4Rs8tjYc
wcNFJ2KRo8MUBPlcdub7iwdlC3PRmSvTEGO0cEWLhJ5fPV3deOk0JEkGXrFb
xINvPfXbj9vTUNkX45S/iodxzEHa809mYFnr1SX1XTxI3/HN4P42Cx60y/aW
nARIax5aVg2dg7AfIfbXuAkAkTeYj/fNQVwFnX06DwFcWk+FBSrPw8srfBem
+QmQ/pVAc2huHmY7D50PwBGg5NB93QK3BbiYEGGVqIx+34KKQe47GXzcma3e
qRCguedNyV/WRbhh8OjcqBoB6AquTVsfWYTMjZyz+7UIUEcfxAxvFmHUttWi
Ug8dX+8nt2f6Epzbx2HaZ0aAkZuGR48kroDzbqLJlgUBAmN13r4fWIHAfnET
sXMEsDn+rJ9OZBUSY5XPONkSQH7CpY4lbxV6/pobr10iANcGk9PBxjUwrnxm
yBdAgB9Ud80OSm6C87LjHjaIAOTHwa4unptwU0nmDfYaAXreNYgH12xC9Ytq
UWw4Adbzn7fKWm4BIeM7mSeKAPGnPwjjE//BWjRnEnciARQLVyKC9XaB62Of
EXcyAdROHTBySN0FWZp0Ku4UAmTHpCsaru+CfaicK1c6AT7KEi1lSvagw+vE
Yc58Ahz/XRZ/KImKmG518ydbJQEset6/H1akIVYnGiazVRPAo45bMOoyDbGn
h/sU2zsCbKt3DLY9oyEyGWdWstYRoELqJosYCy3RR682lqWFAOWP0grUFmiJ
BrLrikx9BLj9/rVe6nd6or1z3RTjAAFGY6I1n2IZiCF5t58yDhFAoWU03dCS
gVgizkvLOEqApC9zF78NMhCFeJX76KcJMK+fEPjqNyNxYds1lHYNPZ9TI6Qz
CixEq3NGBzbX0f1VTc+gC2YhNpfL9i1sEiAlscDhdjML8anrvOLQDgEW9koe
r51nJeoPuP8soZeAIP5msd4UNuKzci9DO6wENNxqD/XW5SQycJqsm/FLwDn6
U0V7iZxEL1fl3BOCEnBy/Y/ZdTIn0QC/tKMqKgGjYlN+CmZcxKV431LWfRLA
uSexOMfBTTzuGiDwVlUCfnFz1bJmYIjlHy0/vlaXgA+/3+YE92CIYngNn1xN
CZBvWoj1Z+IhLvevd97XkYB9HIaion48xPSjwded9CWgn8CcZ27KS1zBhU7z
mEuAhGB8bo0sHzGrP/KNh68E6HNE3Z8/L0Sc/qg0Fu8vAbbkxnb3IiGi3Jsx
5uJACbDDpiR83xEiVj44fIEUIgG9g2x/HLOEiZ9ObDJ73ZIA4S+vPN8vixA3
arwueD+RALGs8ZyGVnGi7gvxOw+TJCDe74uHLw+OeDP5y5vSp+j4WVNR94/g
iBz+cixLaRJwgWMp0TkPR5RQmH3jky8BrceTkto88UTjzAssflUSoLu4F52J
kyAmxHOoJbyVgOWX8flhVhLEwdDaC29qJODlUq/FziMJ4iUr4YqVegloJARd
nGOUJAZj+i/4t6HriaiXfrMpScy9ZVwRMCgBpjeGfZJ29xP/+OyMJQ5LQIf4
NFewnhRR0eEVS9WIBPgN9dgLR0sR3x1msV+fkACFou+nX2CkiV1rH1mC/khA
qlS2rJzKAeKW82H74H8SIHBMW7nwmSzRsEYG/HfQ5z2iDDIzssRn7AI47z0J
OJOEn/JRkSPqlC2NOdNKgtf+4eYLX+SI4f8KLpxjlQQd7Zo/Y+wKxJGb4ndm
2CXBymXXzyNEgfg/pAPrkw==
        "]]}}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, PlotRange -> 
     NCache[{{0, 4 Pi}, {0., 998839.2285035058}}, {{0, 12.566370614359172`}, {
        0., 998839.2285035058}}], PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}],
    TemplateBox[{"\"n=3\"", "\"n=7\"", "\"n=13\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
       Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.609699640160944*^9, {3.6097005730854177`*^9, 3.6097005936604633`*^9}}]
}, Open  ]],

Cell[TextData[{
 "As before, moving far away from the point of expansion causes the \
higher-order approximations to become far less accurate, yielding values on \
the order of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "5"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "6"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " instead of 1. We make another attempt using the series expansion for the \
trigonometric functions already squared:"
}], "Text",
 CellChangeTimes->{{3.609699652437942*^9, 3.609699753067086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SerSinSq", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", "y", "]"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"y", "\[Rule]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.609699762605888*^9, 3.609699778238472*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SerCosSq", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Cos", "[", "y", "]"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}], "/.", 
   RowBox[{"y", "\[Rule]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.609699786880014*^9, 3.609699792421948*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Squared2", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"SerSinSq", "[", 
    RowBox[{"x", ",", "n"}], "]"}], "+", 
   RowBox[{"SerCosSq", "[", 
    RowBox[{"x", ",", "n"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.60969980472554*^9, 3.609699820094697*^9}, {
  3.609700646228476*^9, 3.60970064781664*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Squared2", "[", 
      RowBox[{"x", ",", "3"}], "]"}], ",", 
     RowBox[{"Squared2", "[", 
      RowBox[{"x", ",", "7"}], "]"}], ",", 
     RowBox[{"Squared2", "[", 
      RowBox[{"x", ",", "13"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=3\>\"", ",", "\"\<n=7\>\"", ",", "\"\<n=13\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609699829262053*^9, 3.609699835846608*^9}, {
  3.60970010503036*^9, 3.609700111006846*^9}}],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00I7BjD4YB+UI3lrxqT59jD+xE8xm6dN
Wg/nWx/14nIqPgDnF1T5JW4uOAHn5+5I7WNSvgDnX3nhybk86Qqc36X/jWFb
5A04v1D7xNQDS+/A+b+Ss9fdzXsA5yftDQuYkPYIzk/+eOXAgY4ncH6Pwfb8
ZW3P4HymA9vNW6pewPmCWt7n7s94Bed7zHda/GHSGzhf/P0Zt/rt7+D8Wcd3
MTJnfoDzbWQd/yukfITztR8IPKkt+QTnr10hlLG16DOcX3Mv9rJ22xeE/2ws
vOdN+Yrw33yXpNcTvsH5FwpmJZQv+g7nW7or/bu78Aecf9LVcoXDnJ9w/tKN
My0frf4F54sq62TFrfwN519i5GiS3PMHzt/KUbzswsm/cL6OqEBW0tF/cP77
vm8ixtf+w/nK7e36+VkMDjD+o6jbt5yeI/geTy//3JrHCOdXFKVmiL1F8P22
zfYSK2OC89/9yaph/obgL7zeuCWvmBnO/5Vhm1D5G8GX/TsxurCKBc5/5t59
ioOFFc4/rHbGXq4bwc/iWMaiyMkG529foGJ7eCKCf87a5miQIDuc/yNrdnBC
H4J/ImB+KK8YB5yfZGmzfPkUBN9rV1Fl4G0E39B6pfdvRU44HwBgPQIF
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQzbyf69xj00I7BjD4YB+UI3lrxqT59jD+xE8xm6dN
Wg/nWx/14nIqPgDnF1T5JW4uOAHn5+5I7WNSvmD/Hwze21954cm5POkKXL5L
/xvDtsgbcH6h9ompB5begfN/JWevu5v3AK4/aW9YwIS0R3D55I9XDhzoeALn
9xhsz1/W9gyununAdvOWqhdweUEt73P3Z7yC8z3mOy3+MOkNnC/+/oxb/fZ3
cP6s47sYmTM/wPk2so7/FVI+wvnaDwSe1JZ8gvPXrhDK2Fr0Gc6vuRd7Wbvt
C8J/Nhbe86Z8RfhvvkvS6wnf4PwLBbMSyhd9h/Mt3ZX+3V34A84/6Wq5wmHO
Tzh/6caZlo9W/4LzRZV1suJW/obzLzFyNEnu+QPnb+UoXnbh5F/7f9Dw0REV
yEo6+g8u/77vm4jxtf9wvnJ7u35+FoMDjP8o6vYtp+cIvsfTyz+35jHC+RVF
qRlibxF8v22zvcTKmOD8d3+yapi/IfgLrzduyStmhvN/ZdgmVP5G8GX/Towu
rGKB85sW8Qnb7mdxYIHyn7l3n+JgYYXzQ7Zrt052R/APq52xl+tmdfgB9e80
cctF8qcQ8lkcy1gUOdng/AkhTxWKfNng9m1foGJ7eCKC75RnwNh9EcE/Z21z
NEiQHc5Pvpzdc9Mfwf+RNTs4oY/d4QPU/gexc6+YXULInwiYH8orxgHnix7N
rYsK5XDggPKTLG2WL5+CkPfaVVQZeBvBN7Re6f1bkRPOBwArREc7
        "]]}, {
       Hue[0.1421359549995791, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCwA2IQzbyf69xj00IQFwg+2AflSN6aMWm+PYw/8VPM5mmT
1sP51ke9uJyKD8D5BVV+iZsLTsD5uTtS+5iUL8D5V154ci5PugLnd+l/Y9gW
eQPOL9Q+MfXA0jv2jFD+pkr/n3sP3oPL/0rOXnc374H9fzB4b79OIPH/tqyH
cPmkvWEBE9IewfnJH68cONDxBM7vMdiev6ztmf0/qH6mA9vNW6pewOUFtbzP
3Z/xCs73mO+0+MOkN3C++PszbvXb38H5s47vYmTO/ADn28g6/ldI+Qjnaz8Q
eFJb8gnOX7tCKGNr0Wc4v+Ze7GXtti8I/9tYeM+b8hXh3/kuSa8nfIPzLxTM
Sihf9B3Ot3RX+nd34Q84/6Sr5QqHOT/h/KUbZ1o+Wv0LzhdV1smKW/kbzr/E
yNEkuecPnL+Vo3jZhZN/4eGjIyqQlXT0H1z+fd83EeNr/+F85fZ2/fwsBgcY
/1HU7VtOzxF8j6eXf27NY4TzK4pSM8TeIvh+22Z7iZUxwfnv/mTVMH9D8Bde
b9ySV8wM5//KsE2o/I3gy/6dGF1YxQLnNy3iE7bdz+LAAuU/c+8+xcHCCueH
bNduneyO4B9WO2Mv183q8APq32nilovkTyHksziWsShyssH5E0KeKhT5ssHt
275AxfbwRATfKc+Asfsign/O2uZokCA7nJ98Obvnpj+C/yNrdnBCH7vDB6j9
D2LnXjG7hJA/ETA/lFeMA84XPZpbFxXK4cAB5SdZ2ixfPgUh77WrqDLwNoJv
aL3S+7ciJ5wPAKDdTQ4=
        "]]}}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, PlotRange -> 
     NCache[{{0, Pi}, {0, 2}}, {{0, 3.141592653589793}, {0, 2}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], Automatic}],
    TemplateBox[{"\"n=3\"", "\"n=7\"", "\"n=13\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
       Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.609699838218215*^9, 3.609699909088428*^9, 
  3.60970011174298*^9, 3.609700650157042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Squared2", "[", 
      RowBox[{"x", ",", "3"}], "]"}], ",", 
     RowBox[{"Squared2", "[", 
      RowBox[{"x", ",", "7"}], "]"}], ",", 
     RowBox[{"Squared2", "[", 
      RowBox[{"x", ",", "13"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n=3\>\"", ",", "\"\<n=7\>\"", ",", "\"\<n=13\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.609699914707716*^9, {3.609700075890374*^9, 3.609700082687251*^9}}],

Cell[BoxData[
 FormBox[
  TemplateBox[{GraphicsBox[{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj04l2DGDwwT4oR/LWjEn77WH8iZ9iNk+b
dB7Otz7qxeVU/ADOL6jyS9xc8ALOz92R2sek/AHOv/LCk3N50hc4v0v/G8O2
yB9wfqH2iakHlv6B838lZ6+7m8fgAOMn7Q0LmJDGBOcnf7xy4EAHC5zfY7A9
f1kbG5zPdGC7eUsVB5wvqOV97v4MLjjfY77T4g+TeOB88fdn3Oq388H5s47v
YmTOFIDzbWQd/yukCML52g8EntSWCMH5a1cIZWwtEobza+7FXtZuE4HzC20s
vOdNEYXzf813SXo9QQzOv1AwK6F8kTicb+mu9O/uQgk4/6Sr5QqHOZJw/tKN
My0frZaC80WVdbLiVkrD+ZcYOZok98jA+Vs5ipddOCkL5+uICmQlHZWD89/3
fRMxviYP5yu3t+vnZynA+Y+ibt9yeo7gezy9/HNrniKcX1GUmiH2FsH32zbb
S6xMCc5/9yerhvkbgr/weuOWvGJlRHhk2CZU/kbwZf9OjC6sUoHzn7l3n+Jg
UYXzD6udsZfrRvCzOJaxKHKqwfnbF6jYHp6I4J+ztjkaJKgO5//Imh2c0Ifg
nwiYH8orpgHnJ1naLF8+BcH32lVUGXgbwTe0Xun9W1ETzgcAebnwjg==
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAWIQzbyf69xj04l2DGDwwT4oR/LWjEn77WH8iZ9iNk+b
dB7Otz7qxeVU/ADOL6jyS9xc8ALOz92R2sek/AHOv/LCk3N50hc4v0v/G8O2
yB9wfqH2iakHlv6B838lZ6+7m8fgAOMn7Q0LmJDGBOcnf7xy4EAHC5zfY7A9
f1kbG5zPdGC7eUsVB5wvqOV97v4MLjjfY77T4g+TeOB88fdn3Oq388H5s47v
YmTOFIDzbWQd/yukCML5W/6tKPR/g+BrPxB4Ulsi5MDw7z8QvLfPOSK4bOZn
Ibj82hVCGVuLhOH8Kc475hb8AfIZIfyae7GXtdtE4PKFNhbe86aIwvm/5rsk
vZ4gBudfKJiVUL5IHM63dFf6d3ehBJx/0tVyhcMcSTh/6caZlo9WS8H5oso6
WXErpeH8S4wcTZJ7ZOD8rRzFyy6clIXzdUQFspKOysH57/u+iRhfk4fzldvb
9fOzFOD8R1G3bzk9R/BFF4Rn/dFSRIT/08s/t+YB+Q4Q/oPVMobP1iLkK4pS
M8TeIvjJUxoipxkqOTA0QMLXb9tsL7EyJbj+eZHNj3m2KcHVv/uTVcP8DSHv
kVUmsdNEGS6/8HrjlrxiBN9vQTxXyXYgvwEa3hm2CZW/EfKyfydGF1apwPnP
3LtPcbCowvkh27VbJ7sj+IfVztjLdYP4EPdOE7dcJH8KIZ/FsYxFkVMNzp8Q
8lShyBfEZwTzty9QsT08EcF3yjNg7L6IUH/O2uZokKA6InwuZ/fc9Afx/4Ht
+5E1OzihDyH/IHbuFbNLCP6JgPmhvGIacPNFj+bWRYVqwOWTLG2WL5+C4Hvt
KqoMvA3i/wGbb2i90vu3oqYDpPT4YA8AXm5POQ==
        "]]}, {
       Hue[0.1421359549995791, 0.6, 0.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQzbyf69xj04l2DGDwwT4oR/LWjEn77WH8iZ9iNk+b
dB7Otz7qxeVU/ADOL6jyS9xc8ALOz92R2sek/AHOv/LCk3N50hc4v0v/G8O2
yB9wfqH2iakHlv6B838lZ6+7m8fgAOMn7Q0LmJDGBOcnf7xy4EAHC5zfY7A9
f1kbG5zPdGC7eUsVB5wvqOV97v4MLjjfY77T4g+TeOB88fdn3Oq388H5s47v
YmTOFIDzbWQd/yukCML5W/6tKPR/g+BrPxB4Ulsi5MDw7z8QvLfPOSK4bOZn
Ibj82hVCGVuLhOH8Kc475hb8AfIZIfyae7GXtdtE4PKFNhbe86aIwvm/5rsk
vZ4gBudfKJiVUL5IHM63dFf6d3ehBJx/0tVyhcMcSTh/6caZlo9WS8H5oso6
WXErpeH8S4wcTZJ7ZOD8rRzFyy6clIXzdUQFspKOysH57/u+iRhfk4fzldvb
9fOzFOD8R1G3bzk9R/A9nl7+uTVPEc6vKErNEHuL4Pttm+0lVqYE57/7k1XD
/A3BX3i9cUtesTIiPDJsEyp/I/iyfydGF1apwPnP3LtPcbCowvmH1c7Yy3Uj
+Fkcy1gUOdXg/O0LVGwPT0Twz1nbHA0SVIfzf2TNDk7oQ/BPBMwP5RXTgPOT
LG2WL5+C4HvtKqoMvI3gG1qv9P6tqAnnAwBQJwUu
        "]]}}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, PlotRange -> 
     NCache[{{0, 4 Pi}, {0, 2}}, {{0, 12.566370614359172`}, {0, 2}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], Automatic}],
    TemplateBox[{"\"n=3\"", "\"n=7\"", "\"n=13\""}, "LineLegend", 
     DisplayFunction -> (StyleBox[
       StyleBox[
        PaneBox[
         TagBox[
          GridBox[{{
             TagBox[
              GridBox[{{
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                  ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                 GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                  Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                  ImagePadding -> 1, 
                  BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
               GridBoxAlignment -> {
                "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {{False}}, "Rows" -> {{False}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
              "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"],
          Alignment -> Left, AppearanceElements -> None, 
         ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
        LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
       Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{"Hue", "[", 
                  RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                  "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.609699915684556*^9, 3.6097000844673853`*^9}]
}, Open  ]],

Cell[TextData[{
 "It seems that using the series expansion of the trigonometric function \
already squared yields the expected result of 1, while squaring the series \
expansion creates deviations. This is expected since the series expansion of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["sin", "2"], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is not the square of the series expansion of sin(",
 StyleBox["x",
  FontSlant->"Italic"],
 "), as squaring the expansion of sin(",
 StyleBox["x",
  FontSlant->"Italic"],
 ") would introduces higher-order terms that create large errors when ",
 StyleBox["x ",
  FontSlant->"Italic"],
 "is far from 0."
}], "Text",
 CellChangeTimes->{{3.6097001273068237`*^9, 3.609700260431307*^9}, {
  3.6097003103605213`*^9, 3.609700385698017*^9}, {3.6097013641186867`*^9, 
  3.609701378544252*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Euler Angles", "Subsubtitle",
 CellChangeTimes->{{3.6097013969320993`*^9, 3.609701398552074*^9}}],

Cell[TextData[{
 "We define 3-dimensional rotation matrices about the ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["z",
  FontSlant->"Italic"],
 " axes:"
}], "Text",
 CellChangeTimes->{{3.609701435415268*^9, 3.6097014619388113`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rx", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {"1", "0", "0"},
     {"0", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]},
     {"0", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.609701464535713*^9, 3.609701548125403*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ry", "[", "\[Zeta]_", "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Zeta]", "]"}], "0", 
      RowBox[{"Sin", "[", "\[Zeta]", "]"}]},
     {"0", "1", "0"},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Zeta]", "]"}]}], "0", 
      RowBox[{"Cos", "[", "\[Zeta]", "]"}]}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.609701555201666*^9, 3.609701625095079*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rz", "[", "\[Phi]_", "]"}], ":=", 
  RowBox[{"(", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Phi]", "]"}], 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "0"},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], "0"},
     {"0", "0", "1"}
    }], ")"}]}]], "Input",
 CellChangeTimes->{{3.609701631183619*^9, 3.609701667897313*^9}}],

Cell[TextData[{
 "A three-dimensional rotation can be expressed as a rotation around the ",
 StyleBox["z ",
  FontSlant->"Italic"],
 "axis, followed by a rotation around the ",
 StyleBox["x",
  FontSlant->"Italic"],
 " axis, followed by a rotation around the ",
 StyleBox["z",
  FontSlant->"Italic"],
 " axis:"
}], "Text",
 CellChangeTimes->{{3.609701717607992*^9, 3.60970176761504*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rot3", "[", 
   RowBox[{"\[Psi]_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Rz", "[", "\[Psi]", "]"}], ".", 
   RowBox[{"Rx", "[", "\[Theta]", "]"}], ".", 
   RowBox[{"Rz", "[", "\[Phi]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.609701773688087*^9, 3.609701818699736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Rot3", "[", 
   RowBox[{"\[Psi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.6097018252746887`*^9, 3.609701869045368*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}]}], "+", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Psi]", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"sin", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}]},
     {
      RowBox[{
       RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Phi]", ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"cos", "(", "\[Phi]", ")"}]}], " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}], 
      RowBox[{"cos", "(", "\[Theta]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.609701840095045*^9, 3.6097018695501432`*^9}}]
}, Open  ]],

Cell["\<\
An inverse rotation would simply be undoing these rotations (in reverse \
order):\
\>", "Text",
 CellChangeTimes->{{3.609701887602647*^9, 3.60970191325447*^9}, {
  3.6097021061729727`*^9, 3.609702113212694*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rot3Inverse", "[", 
   RowBox[{"\[Psi]_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Rz", "[", 
    RowBox[{"-", "\[Phi]"}], "]"}], ".", 
   RowBox[{"Rx", "[", 
    RowBox[{"-", "\[Theta]"}], "]"}], ".", 
   RowBox[{"Rz", "[", 
    RowBox[{"-", "\[Psi]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.609701919760187*^9, 3.6097019407715673`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Rot3Inverse", "[", 
   RowBox[{"\[Psi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.609701945623561*^9, 3.60970195543825*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Phi]", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}]}], "+", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"sin", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"cos", "(", "\[Phi]", ")"}]}], " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}]},
     {
      RowBox[{
       RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Psi]", ")"}]}], 
      RowBox[{
       RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}], 
      RowBox[{"cos", "(", "\[Theta]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.609701956426092*^9}]
}, Open  ]],

Cell["\<\
As expected, this is equal to the inverse of the original 3D rotation matrix:\
\
\>", "Text",
 CellChangeTimes->{{3.609701991837572*^9, 3.609702005203038*^9}, {
  3.6097020359265842`*^9, 3.609702040972337*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Inverse", "[", 
   RowBox[{"Rot3", "[", 
    RowBox[{"\[Psi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6097020725584*^9, 3.6097020801931553`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Phi]", ")"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Phi]", ")"}]}], "+", 
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"cos", "(", "\[Psi]", ")"}]}], "-", 
       RowBox[{
        RowBox[{"sin", "(", "\[Phi]", ")"}], " ", 
        RowBox[{"sin", "(", "\[Psi]", ")"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"cos", "(", "\[Phi]", ")"}]}], " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}]},
     {
      RowBox[{
       RowBox[{"sin", "(", "\[Theta]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Psi]", ")"}]}], 
      RowBox[{
       RowBox[{"cos", "(", "\[Psi]", ")"}], " ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}], 
      RowBox[{"cos", "(", "\[Theta]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.609702080961842*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{"Rot3", "[", 
     RowBox[{"\[Psi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "]"}], " ", 
   "-", " ", 
   RowBox[{"Rot3Inverse", "[", 
    RowBox[{"\[Psi]", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6097020223329887`*^9, 3.60970205612906*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"0", "0", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.609702026127008*^9, 3.6097020578973103`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{796, 857},
WindowMargins->{{Automatic, 0}, {Automatic, 20}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 237, 6, 59, "Subtitle"],
Cell[819, 30, 324, 9, 46, "Subtitle"],
Cell[1146, 41, 608, 20, 49, "Text"],
Cell[1757, 63, 569, 14, 30, "Input"],
Cell[2329, 79, 425, 12, 30, "Input"],
Cell[2757, 93, 328, 11, 30, "Text"],
Cell[3088, 106, 456, 12, 30, "Input"],
Cell[CellGroupData[{
Cell[3569, 122, 814, 20, 50, "Input"],
Cell[4386, 144, 35505, 620, 237, "Output"]
}, Open  ]],
Cell[39906, 767, 322, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[40253, 778, 635, 18, 50, "Input"],
Cell[40891, 798, 41927, 724, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82855, 1527, 97, 1, 34, "Subsubtitle"],
Cell[82955, 1530, 410, 14, 34, "Text"],
Cell[83368, 1546, 531, 15, 35, "Input"],
Cell[CellGroupData[{
Cell[83924, 1565, 612, 17, 50, "Input"],
Cell[84539, 1584, 30110, 531, 244, "Output"]
}, Open  ]],
Cell[114664, 2118, 295, 9, 50, "Text"],
Cell[CellGroupData[{
Cell[114984, 2131, 656, 19, 50, "Input"],
Cell[115643, 2152, 46056, 792, 226, "Output"]
}, Open  ]],
Cell[161714, 2947, 605, 16, 73, "Text"],
Cell[162322, 2965, 483, 14, 42, "Input"],
Cell[162808, 2981, 483, 14, 42, "Input"],
Cell[163294, 2997, 369, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[163688, 3011, 759, 21, 50, "Input"],
Cell[164450, 3034, 7893, 165, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172380, 3204, 757, 22, 50, "Input"],
Cell[173140, 3228, 7861, 164, 250, "Output"]
}, Open  ]],
Cell[181016, 3395, 874, 22, 94, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181927, 3422, 103, 1, 34, "Subsubtitle"],
Cell[182033, 3425, 297, 12, 31, "Text"],
Cell[182333, 3439, 441, 13, 69, "Input"],
Cell[182777, 3454, 436, 13, 69, "Input"],
Cell[183216, 3469, 431, 13, 69, "Input"],
Cell[183650, 3484, 387, 12, 51, "Text"],
Cell[184040, 3498, 341, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[184406, 3510, 213, 5, 30, "Input"],
Cell[184622, 3517, 2380, 65, 69, "Output"]
}, Open  ]],
Cell[187017, 3585, 221, 5, 31, "Text"],
Cell[187241, 3592, 410, 11, 30, "Input"],
Cell[CellGroupData[{
Cell[187676, 3607, 217, 5, 30, "Input"],
Cell[187896, 3614, 2354, 65, 69, "Output"]
}, Open  ]],
Cell[190265, 3682, 220, 5, 31, "Text"],
Cell[CellGroupData[{
Cell[190510, 3691, 248, 6, 30, "Input"],
Cell[190761, 3699, 2354, 65, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193152, 3769, 380, 10, 30, "Input"],
Cell[193535, 3781, 652, 18, 69, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
